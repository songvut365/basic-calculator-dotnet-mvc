#pragma checksum "D:\KMITL\2564-1\Software Studio\BasicCalculator\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e9a44c24fb9a28c7363b20f712e756dcd253dc82"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\KMITL\2564-1\Software Studio\BasicCalculator\Views\_ViewImports.cshtml"
using BasicCalculator;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\KMITL\2564-1\Software Studio\BasicCalculator\Views\_ViewImports.cshtml"
using BasicCalculator.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e9a44c24fb9a28c7363b20f712e756dcd253dc82", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9d349eec2d6155d98be71ac81624f0aa4ada8b3c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\KMITL\2564-1\Software Studio\BasicCalculator\Views\Home\Index.cshtml"
  
  ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"text-center index-box\">\r\n    <h1 class=\"display-4\">Welcome to Basic Calculator</h1>\r\n    <div class=\"calculator\">\r\n      <h5>Calculator</h5>\r\n      <input type=\"text\" id=\"mini-display\" disabled");
            BeginWriteAttribute("value", " value=\"", 250, "\"", 258, 0);
            EndWriteAttribute();
            WriteLiteral(@" />
      <input type=""text"" id=""display"" disabled value=""0"" />

      <div class=""numpad"">
        <div>
          <button onclick=""cancel()"">c</button>
          <button onclick=""operatorPad('(')"">(</button>
          <button onclick=""operatorPad(')')"">)</button>
          <button onclick=""operatorPad('/')"">/</button>
        </div>

        <div>
          <button onclick=""numpad('7')"">7</button>
          <button onclick=""numpad('8')"">8</button>
          <button onclick=""numpad('9')"">9</button>
          <button onclick=""operatorPad('*')"">*</button>
        </div>

        <div>
          <button onclick=""numpad('4')"">4</button>
          <button onclick=""numpad('5')"">5</button>
          <button onclick=""numpad('6')"">6</button>
          <button onclick=""operatorPad('-')"">-</button>
        </div>

        <div>
          <button onclick=""numpad('1')"">1</button>
          <button onclick=""numpad('2')"">2</button>
          <button onclick=""numpad('3')"">3</button>
          <b");
            WriteLiteral(@"utton onclick=""operatorPad('+')"">+</button>
        </div>

        <div>
          <button onclick=""numpad('0')"">0</button>
          <button onclick=""allClear()"">AC</button>
          <button onclick=""numpad('.')"">.</button>
          <button onclick=""calculate()"">=</button>
        </div>
      </div>
    </div>
</div>

<script>
  function numpad(number) {
    var miniDisplay = document.getElementById(""mini-display"");
    miniDisplay.value = miniDisplay.value + number;
  }

  function operatorPad(operator) {
    var miniDisplay = document.getElementById(""mini-display"");
    miniDisplay.value = miniDisplay.value + operator;
  }

  function allClear() {
    document.getElementById('mini-display').value = '';
    document.getElementById('display').value = '0';
  }

  function cancel() {
    var miniDisplay = document.getElementById(""mini-display"");
    var temp = miniDisplay.value;
    miniDisplay.value = temp.slice(0, -1);
  }

  function minus() {
    var miniDisplay = do");
            WriteLiteral("cument.getElementById(\"mini-display\");\r\n    miniDisplay.value = miniDisplay.value;\r\n  }\r\n\r\n  function calculate() {\r\n    alert(\"calculate\")\r\n  }\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
